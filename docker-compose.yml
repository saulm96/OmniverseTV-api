services:
  api_server:
    build:
      context: .
      dockerfile: Dockerfile
    environment: &common-env
      - DATABASE_URL=mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@database:3306/${MYSQL_DATABASE}
      - REDIS_HOST=cache
      - REDIS_PORT=6379
      - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - DEEPL_API_KEY=${DEEPL_API_KEY}
    depends_on:
      database:
        condition: service_healthy
      cache:
        condition: service_started
    dns:
      - 8.8.8.8
    networks:
      - omniverse-net

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    environment: *common-env
    depends_on:
      database:
        condition: service_healthy
      cache:
        condition: service_started
    dns:
      - 8.8.8.8
    networks:
      - omniverse-net

  database:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - omniverse-net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      timeout: 20s
      retries: 10
      interval: 30s
      start_period: 30s

  cache:
    image: redis:6.2-alpine
    restart: unless-stopped
    volumes:
      - cache_data:/data
    networks:
      - omniverse-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 10s
      retries: 5
      interval: 15s

networks:
  omniverse-net:
    driver: bridge

volumes:
  db_data:
  cache_data:

